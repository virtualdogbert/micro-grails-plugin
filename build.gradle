plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.10.0'
    id 'groovy'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.4"
}

group = 'com.virtualdogbert'
version = '1.0.M1'
description = 'The Micro Grail plugin brings some of the convention over configuration Grails has to Micronaut projects.'

configurations {
    consolePlugin
}

wrapper {
    gradleVersion = '4.10.2'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencies {
    compile gradleApi()
}

sourceSets {
    main.groovy.srcDir 'src'
    main.resources {
        srcDirs = ['src/main/resources']
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier "sources"
}

ext {
    theTitle = 'Micro Grails Plugin'
    titleForDocumentation = archivesBaseName + ' ' + version
    packageTitle = group
    description = description
}

task jarDoc(type: Jar, dependsOn: [javadoc, groovydoc]) {
    classifier = 'javadoc'
    from docsDir
}

javadoc {
    options.overview('overview.html')
    options.showAll()
    options.encoding('UTF-8')
    options.setUse(true)
    options.author(true)
    options.version(true)
    options.windowTitle("Micro Grails Plugin")
    options.docTitle(titleForDocumentation)
    doFirst {
        javadoc.title = titleForDocumentation
        javadoc.options.docTitle = javadoc.title
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        // disable the crazy super-strict doclint tool in Java 8
        //noinspection SpellCheckingInspection
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

groovydoc {
    dependsOn(classes)
    includePrivate = true
    use = true
    windowTitle = packageTitle
    docTitle = packageTitle
    header = packageTitle
    include 'com/virtualdogbert/**'
}



publishing {
    publications {
        groovyMaven(MavenPublication) {
            from components.java

            artifact(sourceJar) {
                classifier "sources"
            }

            artifact jarDoc {
                classifier = 'javadoc'
            }
        }


    }
}

task jarSrc(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives(jarSrc)
    archives(jarDoc)
}


String getPropertyOrUseDefault(String propertyName, String defaultValue) {
    hasProperty(propertyName) ? getProperty(propertyName) : defaultValue
}

bintray {
    user = getPropertyOrUseDefault("bintrayUser", "fake_user")
    key = getPropertyOrUseDefault("bintrayKey", "fake_key")
    publications = ['groovyMaven']

    def projectName = project.name
    def projectDescription = project.description

    pkg {
        repo = 'maven'
        name = 'micro-grails-plugin'
        userOrg = getPropertyOrUseDefault("bintrayUser", "fake_user")
        desc = 'The Micro Grail plugin brings some of the convention over configuration Grails has to Micronaut projects.'
        licenses = ['Apache-2.0']
        labels = ['gradle', 'plugin', 'micronaut', 'grails', 'micro grails']
        websiteUrl = 'https://github.com/virtualdogbert/migro-grails-plugin'
        issueTrackerUrl = 'https://github.com/virtualdogbert/micro-grails-plugin/issues'
        vcsUrl = 'https://github.com/virtualdogbert/micro-grails-plugin.git'
        publicDownloadNumbers = true
    }
}
gradlePlugin {
    plugins {
        microGrailsPlugin {
            id = 'micro.grails.plugin'
            displayName = 'Micro Grails Plugin'
            description = 'The Micro Grail plugin brings some of the convention over configuration Grails has to Micronaut projects.'
            implementationClass = 'com.virtualdogbert.MicroGrailsPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/virtualdogbert/migro-grails-plugin'
    vcsUrl = 'https://github.com/virtualdogbert/micro-grails-plugin.git'
    tags = ['gradle', 'plugin', 'micronaut', 'grails', 'micro grails']
}

dependencies {
    compile 'com.virtualdogbert:GroovyConfigWriter:1.0'
    compile 'org.yaml:snakeyaml:1.18'
}

